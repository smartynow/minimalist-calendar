(function(l,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(l=typeof globalThis<"u"?globalThis:l||self,s(l.MinimalistCalendar={}))})(this,function(l){"use strict";const s="minimalist-calendar",p={startWeekOn:"mon",inputName:"selected-date",lang:"en-US",activeClass:`${s}--show`,selectedEl:{tagName:"span",className:`${s}__selected`,idName:"date-input",textContent:"Select date"},wrapperEl:{tagName:"div",className:`${s}__wrapper`},monthNavigatorEl:{tagName:"div",className:`${s}__month-navigator`},previousMonthButton:{tagName:"button",className:`${s}__prev-month`,textContent:"←"},nextMonthButton:{tagName:"button",className:`${s}__next-month`,textContent:"→"},currentMonthEl:{tagName:"span",className:`${s}__current-month`},weekdaysEl:{tagName:"ul",className:`${s}__weekdays`},weekdayEl:{tagName:"li",className:`${s}__weekday`},daysEl:{tagName:"div",className:`${s}__days`},dayEl:{tagName:"button",className:`${s}__day`}};class u{constructor(e="mon"){this.originalWeekdaysList=["sun","mon","tue","wed","thu","fri","sat"],this.setStartWeekOn(e)}setStartWeekOn(e){if(!this.originalWeekdaysList.includes(e))throw new Error(`Invalid day: ${e}`);const t=this.originalWeekdaysList.indexOf(e);this.weekdaysList=this.originalWeekdaysList.slice(t).concat(this.originalWeekdaysList.slice(0,t)),this.startWeekOn=e}}class d{constructor(e,t={}){this.datepickerEls=document.querySelectorAll(e),this.options={...p,...t},this.instances=new Map,this.datepickerEls.forEach(a=>{if(!(a instanceof HTMLElement))throw new Error("Invalid argument: element must be an HTMLElement.");const n={datepickerEl:a,weekManager:new u,currentDate:new Date,selectedEl:this.createElement(a,this.options.selectedEl),wrapperEl:this.createElement(a,this.options.wrapperEl)};n.monthNavigatorEl=this.createElement(n.wrapperEl,this.options.monthNavigatorEl),n.previousMonthButton=this.createElement(n.monthNavigatorEl,this.options.previousMonthButton),n.currentMonthEl=this.createElement(n.monthNavigatorEl,this.options.currentMonthEl),n.nextMonthButton=this.createElement(n.monthNavigatorEl,this.options.nextMonthButton),n.weekdaysEl=this.createElement(n.wrapperEl,this.options.weekdaysEl),n.daysEl=this.createElement(n.wrapperEl,this.options.daysEl),n.hiddenInput=this.createHiddenInput(n.datepickerEl),n.dayClickHandler=o=>this.handleDayClick(o,n),n.toggleDatepicker=()=>this.toggleDatepicker(n),n.closeDatepicker=()=>this.closeDatepicker(n),this.instances.set(a,n),this.initInstance(n)})}createElement(e,t){const{tagName:a,className:n,textContent:o,idName:i}=t;if(!e)throw new Error("Parent element not found.");if(!a)throw new Error("Tag name not found.");const r=document.createElement(a);return n&&(r.className=n),o&&(r.textContent=o),i&&(r.id=i),a==="button"&&r.setAttribute("type","button"),e.appendChild(r),r}createHiddenInput(e,t=this.options.inputName){if(!e)throw new Error("Input container not found.");if(!t)throw new Error("Input name not found.");const a=document.createElement("input");return a.type="hidden",a.name=t,e.appendChild(a),a}closeAllExcept(e){this.instances.forEach(t=>{t!==e&&this.closeDatepicker(t)})}toggleDatepicker(e){if(e.datepickerEl)!e.datepickerEl.classList.contains(this.options.activeClass)?(this.closeAllExcept(e),this.openInstance=e):this.openInstance=null,e.datepickerEl.classList.toggle(this.options.activeClass),e.datepickerEl.classList.contains(this.options.activeClass)?e.daysEl.addEventListener("click",e.dayClickHandler):e.daysEl.removeEventListener("click",e.dayClickHandler);else throw new Error("Datepicker element not found.")}closeDatepicker(e){if(e.datepickerEl)e.datepickerEl.classList.remove(this.options.activeClass),e.daysEl.removeEventListener("click",e.dayClickHandler),this.openInstance===e&&(this.openInstance=null);else throw new Error("Datepicker element not found.")}setMonth(e){if(!e.currentMonthEl)throw new Error("Month element not found.");const t=this.options.lang;e.currentMonthEl.textContent=e.currentDate.toLocaleString(t,{month:"long",year:"numeric"})}setWeekdays(e){const{tagName:t,className:a}=this.options.weekdayEl;if(!e.weekdaysEl)throw new Error("Weekdays element not found.");if(!a)throw new Error("Weekday class not found.");e.weekdaysEl.innerHTML="",e.weekManager.weekdaysList.forEach(n=>{this.createElement(e.weekdaysEl,{tagName:t,className:a,textContent:n})})}setDays(e){const{tagName:t,className:a}=this.options.dayEl;e.daysEl.innerHTML="";const n=e.currentDate.getFullYear(),o=e.currentDate.getMonth(),i=new Date(n,o,1).getDay(),r=new Date(n,o+1,0).getDate(),g=e.weekManager.originalWeekdaysList.indexOf(e.weekManager.startWeekOn),y=(i-g+7)%7;for(let c=0;c<y;c++){const h=document.createElement(t);h.className=`${a} ${a}--empty`,e.daysEl.appendChild(h)}for(let c=1;c<=r;c++)this.createElement(e.daysEl,{tagName:t,className:a,textContent:c})}handleDayClick(e,t){const{className:a}=this.options.dayEl,n=`${a}--empty`,o=e.target;if(o.classList.contains(a)&&!o.classList.contains(n)){const i=parseInt(o.textContent);isNaN(i)||this.selectDate(i,t)}}selectDate(e,t){const a=this.options.lang,n=new Date(t.currentDate.getFullYear(),t.currentDate.getMonth(),e),o=n.toLocaleDateString(a,{year:"numeric",month:"2-digit",day:"2-digit"}),i=n.toISOString().split("T")[0];t.selectedEl.textContent=o,t.hiddenInput.value=i,this.closeDatepicker(t)}renderCalendar(e){this.setMonth(e),this.setWeekdays(e),this.setDays(e)}changeMonth(e,t){let a=t.currentDate.getMonth()+e,n=t.currentDate.getFullYear();a<0?(a=11,n--):a>11&&(a=0,n++),t.currentDate=new Date(n,a,1),this.renderCalendar(t)}setupNavigationEvents(e){if(!e.previousMonthButton||!e.nextMonthButton)throw new Error("Navigation buttons are not initialized");e.previousMonthButton.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.changeMonth(-1,e)}),e.nextMonthButton.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.changeMonth(1,e)})}setupOutsideClickHandler(e){document.addEventListener("click",t=>{Array.from(this.instances.values()).every(n=>!n.datepickerEl.contains(t.target)&&!n.wrapperEl.contains(t.target))&&this.closeAllExcept(null)})}initInstance(e){this.renderCalendar(e),e.selectedEl.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),e.toggleDatepicker()}),this.setupNavigationEvents(e),this.setupOutsideClickHandler(e)}}const m=`.${s}`;new d(m),l.MinimalistCalendar=d,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
